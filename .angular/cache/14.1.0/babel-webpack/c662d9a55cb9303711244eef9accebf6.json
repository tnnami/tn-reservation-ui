{"ast":null,"code":"import { Router } from '@angular/router';\nimport { Contactservice } from \"./../../Services/contact.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../Services/contact.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction ListContactComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ListContactComponent_tr_17_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteContact(contact_r1.id));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ListContactComponent_tr_17_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteContact(contact_r1.id));\n    });\n    i0.ɵɵtext(11, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ListContactComponent_tr_17_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteContact(contact_r1.id));\n    });\n    i0.ɵɵtext(13, \"Details\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const contact_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.Name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.Email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.emailId);\n  }\n}\n\nexport class ListContactComponent {\n  constructor(contactsService, router) {\n    this.contactsService = contactsService;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.contacts = this.contactsService.getContacts();\n  }\n\n  deleteContact(id) {\n    this.contactsService.delete(id).subscribe(data => {\n      console.log(data);\n      this.reloadData();\n    }, error => console.log(error));\n  }\n\n  contactDetails(id) {\n    this.router.navigate(['details', id]);\n  }\n\n  updateContact(id) {\n    this.router.navigate(['update', id]);\n  }\n\n}\n\nListContactComponent.ɵfac = function ListContactComponent_Factory(t) {\n  return new (t || ListContactComponent)(i0.ɵɵdirectiveInject(i1.Contactservice), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nListContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListContactComponent,\n  selectors: [[\"tn-reservation-ui-list-contact\"]],\n  decls: 19,\n  vars: 3,\n  consts: [[1, \"panel\", \"panel-primary\"], [1, \"panel-heading\"], [1, \"panel-body\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-info\", 2, \"margin-left\", \"10px\", 3, \"click\"]],\n  template: function ListContactComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Contact List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"table\", 3)(6, \"thead\")(7, \"tr\")(8, \"th\");\n      i0.ɵɵtext(9, \"Firstname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Lastname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, ListContactComponent_tr_17_Template, 14, 3, \"tr\", 4);\n      i0.ɵɵpipe(18, \"async\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 1, ctx.contacts));\n    }\n  },\n  dependencies: [i3.NgForOf, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0LWNvbnRhY3QuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAT,QAAuB,iBAAvB;AAEA,SAASC,cAAT,QAA+B,kCAA/B;;;;;;;;;;ICYUC,2BAA6C,CAA7C,EAA6C,IAA7C;IACMA;IAAgBA;IACpBA;IAAIA;IAAiBA;IACrBA;IAAIA;IAAmBA;IACvBA,2BAAI,CAAJ,EAAI,QAAJ,EAAI,CAAJ;IAAYA;MAAA;MAAA;MAAA;MAAA,OAASA,mDAAT;IAAkC,CAAlC;IAA2DA;IAAMA;IACzEA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,mDAAT;IAAkC,CAAlC;IAAmFA;IAAMA;IACjGA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,mDAAT;IAAkC,CAAlC;IAAmFA;IAAOA;;;;;IALlGA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;;;;ADPhB,OAAM,MAAOC,oBAAP,CAA2B;EAG/BC,YAAoBC,eAApB,EACUC,MADV,EACwB;IADJ;IACV;EAAkB;;EAE5BC,QAAQ;IACN,KAAKC,UAAL;EACD;;EAEDA,UAAU;IACR,KAAKC,QAAL,GAAgB,KAAKJ,eAAL,CAAqBK,WAArB,EAAhB;EACD;;EAEDC,aAAa,CAACC,EAAD,EAAW;IACtB,KAAKP,eAAL,CAAqBQ,MAArB,CAA4BD,EAA5B,EACGE,SADH,CAEIC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAR,CAAYF,IAAZ;MACA,KAAKP,UAAL;IACD,CALL,EAMIU,KAAK,IAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CANb;EAOD;;EAEDC,cAAc,CAACP,EAAD,EAAW;IACvB,KAAKN,MAAL,CAAYc,QAAZ,CAAqB,CAAC,SAAD,EAAYR,EAAZ,CAArB;EACD;;EAEDS,aAAa,CAACT,EAAD,EAAW;IACtB,KAAKN,MAAL,CAAYc,QAAZ,CAAqB,CAAC,QAAD,EAAWR,EAAX,CAArB;EACD;;AA9B8B;;;mBAApBT,sBAAoBD;AAAA;;;QAApBC;EAAoBmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCxB,+BAAiC,CAAjC,EAAiC,KAAjC,EAAiC,CAAjC,EAAiC,CAAjC,EAAiC,IAAjC;MAEUA;MAAYA;MAElBA,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB,EAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB,EAAwB,IAAxB,EAAwB,CAAxB,EAAwB,IAAxB;MAIYA;MAASA;MACbA;MAAIA;MAAQA;MACZA;MAAIA;MAAKA;MACTA;MAAIA;MAAOA;MAGfA;MACEA;;MASFA;;;;MAT0BA;MAAAA","names":["Router","Contactservice","i0","ListContactComponent","constructor","contactsService","router","ngOnInit","reloadData","contacts","getContacts","deleteContact","id","delete","subscribe","data","console","log","error","contactDetails","navigate","updateContact","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbookpro/Documents/Nx Workspace/tn-reservation-ui/apps/user-dashboard/src/app/pages/list-contact/list-contact.component.ts","/Users/macbookpro/Documents/Nx Workspace/tn-reservation-ui/apps/user-dashboard/src/app/pages/list-contact/list-contact.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from \"rxjs\";\nimport { Contactservice } from \"./../../Services/contact.service\";\nimport { Contacts } from \"./../../Models/contacts.model\";\n\n@Component({\n  selector: 'tn-reservation-ui-list-contact',\n  templateUrl: './list-contact.component.html',\n  styleUrls: ['./list-contact.component.css'],\n})\nexport class ListContactComponent implements OnInit {\n  contacts: Observable<Contacts[]> | undefined;\n\n  constructor(private contactsService: Contactservice,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.contacts = this.contactsService.getContacts();\n  }\n\n  deleteContact(id: number) {\n    this.contactsService.delete(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  contactDetails(id: number){\n    this.router.navigate(['details', id]);\n  }\n\n  updateContact(id: number){\n    this.router.navigate(['update', id]);\n  }\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <h2>Contact List</h2>\n    </div>\n    <div class=\"panel-body\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Firstname</th>\n            <th>Lastname</th>\n            <th>Email</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let contact of contacts | async\">\n            <td>{{contact.Name}}</td>\n            <td>{{contact.Email}}</td>\n            <td>{{contact.emailId}}</td>\n            <td><button (click)=\"deleteContact(contact.id)\" class=\"btn btn-danger\">Delete</button>\n                <button (click)=\"deleteContact(contact.id)\" class=\"btn btn-info\" style=\"margin-left: 10px\">Update</button>\n                <button (click)=\"deleteContact(contact.id)\" class=\"btn btn-info\" style=\"margin-left: 10px\">Details</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module"}